{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adnan\\\\Web Development\\\\React\\\\21.a\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// const router = createBrowserRouter([\n//   {\n//     path: \"\",\n//     element: <RootPage />,\n//     children: [\n//       {\n//         path: \"\",\n//         element: <EventsNavigation />,\n//         children: [\n//           { path: \"events\", element: <EventsPage /> },\n//           { path: \"events/:eventId\", element: <EventDetailPage /> },\n//           { path: \"events/new\", element: <NewEventPage /> },\n//           { path: \"events/:eventId/edit\", element: <EditEventPage /> },\n//         ],\n//       },\n//     ],\n//   },\n// ]);\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootPageLayout from \"./Pages/Root.js\";\nimport EventsNavigation from \"./components/EventsNavigation.js\";\nimport EventsPage from \"./Pages/Events.js\";\nimport EventDetailPage from \"./Pages/EventDetail.js\";\nimport NewEventPage from \"./Pages/NewEvent.js\";\nimport EditEventPage from \"./Pages/EditEvent.js\";\nimport HomePage from \"./Pages/Home.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"\",\n    element: /*#__PURE__*/_jsxDEV(RootPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 30\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }, this)\n    }, {\n      path: \"events/:eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }, this)\n    }, {\n      path: \"events/new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \"events/:eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 50\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootPageLayout","EventsNavigation","EventsPage","EventDetailPage","NewEventPage","EditEventPage","HomePage","jsxDEV","_jsxDEV","App","router","path","element","RootPage","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["D:/Adnan/Web Development/React/21.a/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// const router = createBrowserRouter([\n//   {\n//     path: \"\",\n//     element: <RootPage />,\n//     children: [\n//       {\n//         path: \"\",\n//         element: <EventsNavigation />,\n//         children: [\n//           { path: \"events\", element: <EventsPage /> },\n//           { path: \"events/:eventId\", element: <EventDetailPage /> },\n//           { path: \"events/new\", element: <NewEventPage /> },\n//           { path: \"events/:eventId/edit\", element: <EditEventPage /> },\n//         ],\n//       },\n//     ],\n//   },\n// ]);\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootPageLayout from \"./Pages/Root.js\";\nimport EventsNavigation from \"./components/EventsNavigation.js\";\nimport EventsPage from \"./Pages/Events.js\";\nimport EventDetailPage from \"./Pages/EventDetail.js\";\nimport NewEventPage from \"./Pages/NewEvent.js\";\nimport EditEventPage from \"./Pages/EditEvent.js\";\nimport HomePage from \"./Pages/Home.js\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"\",\n      element: <RootPage />,\n      children: [\n        { path: \"\", element: <HomePage /> },\n        { path: \"events\", element: <EventsPage /> },\n        { path: \"events/:eventId\", element: <EventDetailPage /> },\n        { path: \"events/new\", element: <NewEventPage /> },\n        { path: \"events/:eventId/edit\", element: <EditEventPage /> },\n      ],\n    },\n  ]);\n\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGZ,mBAAmB,CAAC,CACjC;IACEa,IAAI,EAAE,EAAE;IACRC,OAAO,eAAEJ,OAAA,CAACK,QAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACrBC,QAAQ,EAAE,CACR;MAAEP,IAAI,EAAE,EAAE;MAAEC,OAAO,eAAEJ,OAAA,CAACF,QAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACnC;MAAEN,IAAI,EAAE,QAAQ;MAAEC,OAAO,eAAEJ,OAAA,CAACN,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC3C;MAAEN,IAAI,EAAE,iBAAiB;MAAEC,OAAO,eAAEJ,OAAA,CAACL,eAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACzD;MAAEN,IAAI,EAAE,YAAY;MAAEC,OAAO,eAAEJ,OAAA,CAACJ,YAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACjD;MAAEN,IAAI,EAAE,sBAAsB;MAAEC,OAAO,eAAEJ,OAAA,CAACH,aAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAEhE,CAAC,CACF,CAAC;EAEF,oBAAOT,OAAA,CAACT,cAAc;IAACW,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACE,EAAA,GAhBQV,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}